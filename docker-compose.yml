version: '2.4'

x-app-service-template: &app
  image: anycable-demo:0.6.6
  build:
    context: .
    dockerfile: .dockerdev/Dockerfile
    args:
      RUBY_VERSION: "2.6.5"
      NODE_MAJOR: '12'
      BUNDLER_VERSION: '1.17.1'
  tmpfs:
    - /tmp
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
    ANYCABLE_DEBUG: ${DEBUG:-0}
    ANYCABLE_RPC_HOST: 0.0.0.0:50051

x-backend: &backend
  <<: *app
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - .dockerdev/.pryrc:/root/.pryrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
  tmpfs:
    - /app/tmp/pids
  environment:
    <<: *env
    REDIS_URL: redis://redis:6379/
    WEB_CONCURRENCY: 1
    HISTFILE: /app/tmp/cache/.bash_history
    EDITOR: vi
    CABLE_URL: ws://localhost:8080/cable
    ADAPTER: any_cable
  stdin_open: true
  tty: true
  depends_on:
    redis:
      condition: service_healthy

services:
  web:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  rpc:
    <<: *backend
    command: bundle exec anycable

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  anycable:
    image: 'anycable/anycable-go:1.0.0.preview1'
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      ANYCABLE_HOST: 0.0.0.0
      REDIS_URL: redis://redis:6379/0
      ANYCABLE_RPC_HOST: rpc:50051
      ANYCABLE_DEBUG: ${DEBUG:-0}
    depends_on:
      - redis
      - rpc

volumes:
  redis:
  bundle:
  assets:
  rails_cache:
